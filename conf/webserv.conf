# http {

server {
    listen 6969;
    # listen 7070;

    server_name localhost;
    # client_max_body_size 5;
    # root /var/www/html;
    # index index.html;
    # error_page 400 hihi;
    index outer;
    location first {
      fastcgi_pass path python;
      # error_page 500 heyho;
      index inner;
    }
    # location second {
    #   fastcgi_pass path php;
    #   error_page 500 haha;
    # }
}

# server {
    # listen 6969;
    # listen 7070;

    # server_name localhost;
    # client_max_body_size 5;
    # root /var/www/html;
    # index index.html;
    # error_page 400 hihi;

    # location first {
    #   fastcgi_pass path python;
    # }
    # location second {
    #   fastcgi_pass path php;
    #   error_page 500 haha;
    # }
# }

# server {
#     listen 6969;
#     listen 7070;
#     # listen [::]:6969;

#     server_name localhost;

#     root /var/www/html;
#     index index.html;
#     location first {
#       fastcgi_pass path python;
#     }
#     location second {
#       fastcgi_pass path php;
#     }
# }

# }

    # # tries filed if root is accessed and redirects to index if necesarry
    # location / {
    #     try_files $uri $uri/ /index.php$is_args$args;
    # }

    # # takes care of all php requests
    # location ~ \.php$ {
    #     # includes default fastcgi parameters
    #     include fastcgi_params; 
    #     # specifies destination
    #     fastcgi_pass wordpress:9000; 
    #     # tells the php-fpm server what to execute
    #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    # }

# server {
#     listen 7171;
#     server_name localhost;

#     location / {
#         proxy_pass http://localhost:7272;  # Forward to backend server
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# upstream backend_servers {
#     server localhost:8080;  # Replace with your actual backend server configuration
#     server localhost:8081;  # Add more servers as needed
# }

# server {
#     listen 7272;
#     server_name localhost;

#     location / {
#         proxy_pass http://backend_servers;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# server {
#     listen 7373;
#     server_name localhost;  # Replace with your domain

#     location /upload {
#         client_max_body_size 10M;  # Set the maximum upload size
#         # Save uploaded files to a specific directory
#         upload_store /var/www/html;
#         upload_pass /upload_finished;
#         upload_set_form_field $upload_field_name.name "$upload_file_name";
#         upload_set_form_field $upload_field_name.content_type "$upload_content_type";
#         upload_set_form_field $upload_field_name.path "$upload_tmp_path";
#         upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
#         upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
#         upload_cleanup 400 404 499 500-505;
#         # Return a response indicating upload success
#         return 200 "Upload successful.\n";
#     }

#     location /upload_finished {
#         internal;
#         # This location is used for post-upload processing if needed
#         # For now, you can leave it empty
#     }

#     # Other configuration options
# }
